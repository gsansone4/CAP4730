#version 330 core

in vec2 UV;

out vec4 color;

uniform sampler2D renderedTexture;
uniform float time;

void main(){

	//color = texture( renderedTexture, UV + 0.005*vec2( tan(time+1024.0*UV.x),tan(time+768.0*UV.y)) ).xyz ;
	//color = ComputeVolumetricLighting(UV);

	const int NUM_SAMPLES = 128;
	float exposure=5.0;
    float decay=0.96;
    float density=0.5;
    float weight=0.01;

	vec2 deltaTextCoord = vec2( UV - vec2(1.0, 1.0) );
    vec2 textCoo = UV;
    deltaTextCoord *= 1.0 /  float(NUM_SAMPLES) * density;
    float illuminationDecay = 1.0;


    for(int i=0; i < NUM_SAMPLES ; i++)
    {
        textCoo -= deltaTextCoord;
        vec4 sample = texture(renderedTexture, textCoo );
        sample *= illuminationDecay * weight;
        color += sample;
        illuminationDecay *= decay;
    }
    color *= exposure;
}
